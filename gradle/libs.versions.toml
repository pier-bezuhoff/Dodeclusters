[versions]
dodeclusters-version = "0.4.3"
dodeclusters-android-versionCode = "8"
dodeclusters-desktop-packageVersion = "1.0.4" # cannot start with 0 it seems
android-compileSdk = "35"
android-minSdk = "24" # = Android 7.0 Nougat
android-targetSdk = "35"

kotlin = "2.1.21"
# consult kmp-agp compatibility table:
# https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#version-compatibility
#noinspection AndroidGradlePluginVersion
agp = "8.7.2"
compose-multiplatform = "1.8.0"
# check compose-multiplatform/release for version compatibility:
# https://github.com/JetBrains/compose-multiplatform/releases/latest
#noinspection GradleDependency
jetpack-compose = "1.8.0"
kotlinx-serialization = "1.8.1"
kotlinx-coroutines = "1.10.2"
androidx-activityCompose = "1.10.1"
material-icons = "1.7.3"
androidx-core-ktx = "1.16.0"
lifecycle-viewmodel = "2.9.0-beta01"
window-size-klass = "0.5.0"
colormath = "3.6.1"
kaml = "0.78.0"
kstore = "0.9.1"
appdirs = "1.2.0"
accompanist = "0.37.3"
collection = "1.5.0"

[libraries]
compose-ui-graphics = { module = "org.jetbrains.compose.ui:ui-graphics", version.ref = "compose-multiplatform" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "jetpack-compose" }
compose-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
compose-material-icons = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "material-icons" }
# official window-size-class is still worse
#compose-material3-window-size-klass = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "material3" }
compose-material3-window-size-klass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "window-size-klass" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization"}
colormath = { module = "com.github.ajalt.colormath:colormath", version.ref = "colormath" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }
appdirs = { module = "ca.gosyer:kotlin-multiplatform-appdirs", version.ref = "appdirs" }
accompanist = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
collection = { module = "androidx.collection:collection", version.ref = "collection" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
